3.1
There will be a login screen for users that allows them to login to an existing account, or sign up for a new account. This page will include two separate fields for typing in a username and password for either signing up or registering. There will also be a sign-up and register button.

There will be a landing page once a user has logged into their account, on this screen the user will be shown some basic statistics about their profile, they will have a play button to begin matchmaking, and a logout button to enable users to log out of their account. There will also be a button to navigate the user into the games page.

There will also be a games page showing all the play-able games on our website, along with their rules and simple instructions on how to play them. This page will also have a back button to get the user back onto the original landing page.

There will lastly be a game board screen where the game being played is held, a title telling the user which game is being played, an indicator telling both players whose turn it currently is and how much time left they have to take their turn. Lastly there will be a concede button for any user who wants to quit playing. This will result in a winner and a defeat pop-up, which gives both players a button to return to their home landing page.

3.1.2
The website will be a web browser based game service. This will take inputs from the user’s keyboard and mouse to interact with each of the pages available. This will then transmit those actions to our website to make changes to their screen or update an existing game board.

3.1.3
The django web server/python interface will be interfacing with the Ubuntu linux distribution to power our web browser. This will be used to generate and refresh all of our pages. This will also be what allows us to have our game code interface with the Online Multiplayer Board Game

3.1.4
????


3.2
* Browser-based GUI
	This is an easy to navigate, simple layout for our website. This includes all four of the pages our website provides, along with their stats, instructions, login, and games that appear throughout them..

* Basic matchmaking to pair prospective players and initialize a match.
	This is the ability for our website to pair two logged in users to the server side game, it will pull two queued users and put them into a game together.

* Credentialing system allowing each user a unique,persistent identity within the system.
	This is the creation of a personal account by means of a user-created username. This will allow for a display name and also provide a username for logging into the website.
 
* Connect to the internet
 A stable connection to the internet is needed to enable each user to communicate with the server. Actions taken on the game need to be translated to the opponent, which isn’t possible without internet connection.
 
* Wins/Losses Statistics Tracked
	The website will keep track of the amount of wins and losses that have occurred for each individual based on their account. This information is then displayed to the user on their homepage.
 
* Allow Interaction Between Users
 The website should allow users to look up other users via their username and see their stats. We aim to also have this in the form of some premade messages such as “Good Game” or “Close One!” which can be sent while in-game.
 
* Allow Users to connect to Game
	The website needs to be able to either find a game for our user, or tell them no other users are available within five minutes of being queued to play a game.
 
* Allow Users to Select a Game
The website needs to allow the user to specify which game/games they want to queue for and only queue them up with other users queued for those games.  

3.3
 Actors:
	Player 1 (Vancouver)   --- inputs --->   Keyboard, Mouse    
 --- outputs --->   Monitor

	Player 2 (Portland)      --- inputs --->   Keyboard, Mouse    
 --- outputs --->   Monitor

	Website (Server)	--- inputs --->   Users inputs   
--- outputs --->   Changed states, User's Monitors

The players are two users who have accounts and are looking to play a game on our website. They are both sending inputs to the server and those inputs will result in different screens being presented to each user. Eventually when they both are queued, the same screen will be displayed to both and be updated server side, then served back to both users.



4.1
For our code we plan on using TDD to minimize the amount of bugs we occur. We will also have a phase where we implement features and have them tested prior to adding additional features. This should reduce the amount of errors we allow into our final prototype.
